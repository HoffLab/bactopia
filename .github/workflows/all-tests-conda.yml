name: All Bactopia Tests (Conda)

on: workflow_dispatch
  #schedule:
    # At 01:30 on Monday and Thursday
    #- cron:  '30 1 * * 1,4'

jobs:
  pytest-bactopia:
    runs-on: olaf
    defaults:
      run:
        shell: bash -l {0}

    steps:
      - name: Checkout bactopia/bactopia
        uses: actions/checkout@v2
        with:
          path: ${{ github.run_id }}/bactopia

      - name: Run Bactopia Tests (per module)
        run: |
          BACTOPIA_CI=/data/storage/bactopia-ci
          BACTOPIA_WORKSPACE="${GITHUB_WORKSPACE}/${{ github.run_id }}"
          source ${BACTOPIA_CI}/miniconda3/etc/profile.d/conda.sh
          conda activate bactopia-ci
          uname -a && env
          mkdir /tmp/gh-runner-${{ github.run_id }}
          cd ${BACTOPIA_WORKSPACE}/bactopia
          ls modules/local/bactopia | xargs -I {} bash -c 'BACTOPIA_ARGS="--condadir ${BACTOPIA_CI}/envs/conda --test_data_dir ${BACTOPIA_CI}/bactopia-tests/data" TMPDIR=/tmp/${{ github.run_id }} pytest --wt 20 --symlink --kwdof -o "testpaths=modules/local/bactopia" --tag {}'

      - name: Run Bactopia Tools Tests (per tools)
        run: |
          BACTOPIA_CI=/data/storage/bactopia-ci
          BACTOPIA_WORKSPACE="${GITHUB_WORKSPACE}/${{ github.run_id }}"
          source ${BACTOPIA_CI}/miniconda3/etc/profile.d/conda.sh
          conda activate bactopia-ci
          uname -a && env
          mkdir /tmp/${{ github.run_id }}
          cd ${BACTOPIA_WORKSPACE}/bactopia
          ls ${BACTOPIA_WORKSPACE}/bactopia/subworkflows/local/bactopia | xargs -I {} bash -c 'BACTOPIA_ARGS="--condadir ${BACTOPIA_CI}/envs/conda --test_data_dir ${BACTOPIA_CI}/bactopia-tests/data" TMPDIR=/tmp/${{ github.run_id }} pytest --wt 20 --symlink --kwdof "testpaths=subworkflows/local/" --tag {}'

      - name: Upload logs on failure
        if: failure()
        uses: actions/upload-artifact@v2
        with:
          name: logs-debian
          path: |
            /tmp/gh-runner-${{ github.run_id }}/pytest_workflow_*/*/log.out
            /tmp/gh-runner-${{ github.run_id }}/pytest_workflow_*/*/log.err
            
      - name: Cleanup
        if: always()
        run: rm -rf ${{ github.run_id }} /tmp/gh-runner-${{ github.run_id }}
